var documenterSearchIndex = {"docs":
[{"location":"parallelization/#Parallelization","page":"Parallelization","title":"Parallelization","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"The implementation uses MPI to parallelize the most expensive parts of the pipeline.","category":"page"},{"location":"parallelization/#Spreading-vorticity-to-the-grid","page":"Parallelization","title":"Spreading vorticity to the grid","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Each rank handles a strided subset of grid points (round-robin across the flattened (k,j,i) index ordering).\nFor each grid point, it collects contributions from nearby elements via the chosen kernel and periodic tiles.\nLocal contributions are accumulated in a rank-local buffer; a final MPI.Allreduce (SUM) builds the global grid vorticity.","category":"page"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Benefits: embarrassingly parallel, no halo exchange, and no custom domain decomposition needed.","category":"page"},{"location":"parallelization/#Poisson-solve","page":"Parallelization","title":"Poisson solve","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"The FFT-based Poisson solver currently runs on rank 0, computes the full solution (Ux,Uy,Uz), and broadcasts to all ranks.\nFor very large problems, PoissonAdvanced provides interfaces for iterative or multigrid solvers. A hybrid solver can try FFT first and fall back if the residual is above a threshold.","category":"page"},{"location":"parallelization/#Interpolation-to-nodes","page":"Parallelization","title":"Interpolation to nodes","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Each rank handles a strided subset of nodes and accumulates interpolated velocities from nearby grid cells using the same kernel family.\nPer-rank results are combined with MPI.Allreduce.","category":"page"},{"location":"parallelization/#Time-stepping-and-adaptivity","page":"Parallelization","title":"Time stepping and adaptivity","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Node velocities are computed in parallel, and RK2 updates are carried out locally with final periodic wraps per step.\nAdaptive dt is computed from the global maximum grid speed via MPI.Allreduce (MAX).","category":"page"},{"location":"parallelization/#Checkpointing-and-I/O","page":"Parallelization","title":"Checkpointing and I/O","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Checkpoints (CSV, MAT, JLD2) are written on rank 0 to avoid file contention. Rank 0 aggregates necessary data and saves.","category":"page"},{"location":"parallelization/#Figures-from-the-thesis","page":"Parallelization","title":"Figures from the thesis","text":"","category":"section"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Recommended figures:","category":"page"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Schematic of the Lagrangian–Eulerian pipeline.\nStrong/weak scaling curves (if available).","category":"page"},{"location":"parallelization/","page":"Parallelization","title":"Parallelization","text":"Place images extracted from the thesis into docs/src/assets/ and reference here.","category":"page"},{"location":"api/#API-Reference","page":"API","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"This page lists the main user-facing entry points. See docstrings and source for details.","category":"page"},{"location":"api/#Domain-and-grid","page":"API","title":"Domain and grid","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"DomainSpec(Lx,Ly,Lz), GridSpec(nx,ny,nz)\ndefault_domain(), default_grid()\ngrid_vectors(domain, gr), grid_spacing(domain, gr), grid_mesh(domain, gr)\nwrap_point(x,y,z, domain), wrap_nodes!(nodeX,nodeY,nodeZ, domain)","category":"page"},{"location":"api/#Kernels","page":"API","title":"Kernels","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Kernels:","category":"page"},{"location":"api/","page":"API","title":"API","text":"Types: KernelType, PeskinStandard, PeskinCosine, M4Prime, AreaWeighting\nHelpers: kernel_function, kernel_support_radius","category":"page"},{"location":"api/#Spreading-and-interpolation-(MPI)","page":"API","title":"Spreading and interpolation (MPI)","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Peskin3D:","category":"page"},{"location":"api/","page":"API","title":"API","text":"spread_vorticity_to_grid_mpi(eleGma, triXC, triYC, triZC, domain, gr)\ninterpolate_node_velocity_mpi(Ux, Uy, Uz, nodeX, nodeY, nodeZ, domain, gr)\nKernel variants: spread_vorticity_to_grid_kernel_mpi, interpolate_node_velocity_kernel_mpi","category":"page"},{"location":"api/#Poisson-solvers","page":"API","title":"Poisson solvers","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Poisson3D:","category":"page"},{"location":"api/","page":"API","title":"API","text":"curl_rhs_centered(VorX,VorY,VorZ, dx,dy,dz)\npoisson_velocity_fft(u_rhs,v_rhs,w_rhs, domain; mode=:spectral)\npoisson_velocity_fft_mpi(u_rhs,v_rhs,w_rhs, domain; mode=:spectral)","category":"page"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.PoissonAdvanced:","category":"page"},{"location":"api/","page":"API","title":"API","text":"Types: FFTSolver, IterativeSolver, MultigridSolver, HybridSolver\nBCs: PeriodicBC, DirichletBC, NeumannBC\nsolve_poisson!(solver, u_rhs, v_rhs, w_rhs, domain)\nsolve_poisson_adaptive!(u_rhs, v_rhs, w_rhs, domain; bc=PeriodicBC())","category":"page"},{"location":"api/#Time-stepping","page":"API","title":"Time stepping","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.TimeStepper:","category":"page"},{"location":"api/","page":"API","title":"API","text":"node_velocities(eleGma, triXC, triYC, triZC, nodeX, nodeY, nodeZ, domain, gr; poisson_mode=:spectral)\nrk2_step!(nodeX, nodeY, nodeZ, tri, eleGma, domain, gr, dt; kwargs...)\nrk2_step_with_dissipation!(...; dissipation_model=NoDissipation(), kwargs...)\nVelocity helpers: grid_velocity(...), make_velocity_sampler(...)","category":"page"},{"location":"api/#Dissipation-models","page":"API","title":"Dissipation models","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Dissipation:","category":"page"},{"location":"api/","page":"API","title":"API","text":"Types: DissipationModel, NoDissipation, SmagorinskyModel, DynamicSmagorinsky, VortexStretchingDissipation, MixedScaleModel\nFunctions: apply_dissipation!(...), compute_eddy_viscosity(...), filter_width(...)","category":"page"},{"location":"api/#Remeshing","page":"API","title":"Remeshing","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Remesh:","category":"page"},{"location":"api/","page":"API","title":"API","text":"remesh_pass!(nodeX,nodeY,nodeZ, tri, ds_max, ds_min; domain, ...)\nUtilities: detect_max_edge_length, detect_min_edge_length","category":"page"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.RemeshAdvanced:","category":"page"},{"location":"api/","page":"API","title":"API","text":"compute_mesh_quality(triXC,triYC,triZC, domain) (periodic) and variants\nflow_adaptive_remesh!(nodeX,nodeY,nodeZ, tri, velocity_field, domain; thresholds...)\ncurvature_based_remesh!(...), anisotropic_remesh!(...), periodic-aware","category":"page"},{"location":"api/#Vortex-sheets","page":"API","title":"Vortex sheets","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.VortexSheets:","category":"page"},{"location":"api/","page":"API","title":"API","text":"Types: LagrangianSheet, EulerianSheet, HybridSheet\nEvolution: evolve_sheet!(sheet, evolution, velocity_field, dt, domain) with Classical, Adaptive, or HighOrder strategies\nAnalysis: compute_sheet_curvature(...), detect_sheet_rollup(...)\nReconnection/smoothing: check_sheet_reconnection!(..., domain), reconnect_sheet_nodes!(..., domain), smooth_local_curvature!(..., domain)","category":"page"},{"location":"api/#Checkpointing","page":"API","title":"Checkpointing","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"VortexMethod.Checkpoint:","category":"page"},{"location":"api/","page":"API","title":"API","text":"Single-snapshot: save_checkpoint! (CSV), save_checkpoint_mat! (MAT), save_checkpoint_jld2! (JLD2)\nTime series (JLD2): save_state_timeseries!, series_times, load_series_snapshot, load_series_nearest_time\nHelpers: mesh_stats(...) with periodic overload when domain is provided","category":"page"},{"location":"usage/#Usage-Guide","page":"Usage","title":"Usage Guide","text":"","category":"section"},{"location":"usage/#Installation","page":"Usage","title":"Installation","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"julia --project -e 'using Pkg; Pkg.instantiate()'","category":"page"},{"location":"usage/#Running-examples-with-MPI","page":"Usage","title":"Running examples with MPI","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"mpirun -n 4 julia --project examples/simple3d.jl\nmpirun -n 4 julia --project examples/kh3d.jl\nmpirun -n 4 julia --project examples/advanced_kh3d.jl","category":"page"},{"location":"usage/#Core-API","page":"Usage","title":"Core API","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Domain/grid: DomainSpec(Lx,Ly,Lz), GridSpec(nx,ny,nz), default_domain(), default_grid()\nPeriodic helpers: wrap_point(x,y,z, domain), wrap_nodes!(nodeX,nodeY,nodeZ, domain)\nSpreading/interpolation (MPI): spread_vorticity_to_grid_mpi, interpolate_node_velocity_mpi\nPoisson: poisson_velocity_fft / _mpi (periodic), or see PoissonAdvanced for alternatives\nTime stepping: rk2_step!, rk2_step_with_dissipation!; helper node_velocities\nVelocity reuse: grid_velocity to compute (Ux,Uy,Uz) once; make_velocity_sampler to build (x,y,z)->(u,v,w) closures\nRemeshing: VortexMethod.Remesh.* and VortexMethod.RemeshAdvanced.*\nVortex sheets: see VortexMethod.VortexSheets\nCheckpoints: save_checkpoint!, save_state!, save_state_timeseries!","category":"page"},{"location":"usage/#Minimal-workflow","page":"Usage","title":"Minimal workflow","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Build or load a triangulated sheet (node arrays + tri connectivity). Initialize eleGma (nt×3).\nCompute node velocities and advance with rk2_step! (or the variant with dissipation).\nPeriodically remesh using the baseline or advanced methods. Preserve circulation via node_circulation_from_ele_gamma and ele_gamma_from_node_circ.\nSave checkpoints regularly (rank 0) via save_state! or save_state_timeseries!.","category":"page"},{"location":"usage/#Advanced-remeshing-recipe","page":"Usage","title":"Advanced remeshing recipe","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"Ux,Uy,Uz = grid_velocity(eleGma, triXC, triYC, triZC, domain, gr)\nvel = make_velocity_sampler(eleGma, triXC, triYC, triZC, domain, gr)\ntri_new, changed = VortexMethod.RemeshAdvanced.flow_adaptive_remesh!(\n    nodeX, nodeY, nodeZ, tri, vel, domain;\n    max_aspect_ratio=3.0, min_angle_quality=0.4, min_jacobian_quality=0.4,\n    max_skewness=0.8, grad_threshold=0.2, curvature_threshold=0.6,\n)","category":"page"},{"location":"usage/#Periodicity-and-particle-management","page":"Usage","title":"Periodicity and particle management","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"After inserting, deleting, or moving nodes manually, call wrap_nodes! to keep positions in-range.\nUse wrap_point for single updates (e.g., after reconnection).","category":"page"},{"location":"usage/#Figures-from-the-thesis","page":"Usage","title":"Figures from the thesis","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"You can place figures into docs/src/assets/ and reference them in Markdown with ![](assets/...). If you provide figure numbers/pages, we can add captions and cross-references.","category":"page"},{"location":"remeshing/#Remeshing","page":"Remeshing","title":"Remeshing","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"The sheet mesh must maintain resolution and element quality as it deforms. We provide two layers of remeshing.","category":"page"},{"location":"remeshing/#Baseline-pass-(VortexMethod.Remesh.remesh_pass!)","page":"Remeshing","title":"Baseline pass (VortexMethod.Remesh.remesh_pass!)","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Detect long edges and perform 1→4 splits using periodic midpoints on all three edges of any marked triangle (and its neighbor sharing an edge).\nPerform edge flips to remove very short edges and reduce anisotropy.\nOptionally collapse edges persistently below ds_min by inserting a periodic midpoint and replacing both endpoints.\nCompact node indices (optional) and finally wrap all nodes to the periodic domain using wrap_nodes!.","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Inputs are derived from grid spacing: ds_max ≈ O(max(dx,dy)), ds_min ≈ O(0.05 max(dx,dy)).","category":"page"},{"location":"remeshing/#Advanced,-thesis-style-refinement-(VortexMethod.RemeshAdvanced.flow_adaptive_remesh!)","page":"Remeshing","title":"Advanced, thesis-style refinement (VortexMethod.RemeshAdvanced.flow_adaptive_remesh!)","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Uses strict thresholds designed to match the thesis:","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Periodic quality metrics (minimum image)\nMax aspect ratio: aspect_ratio ≤ max_aspect_ratio (default 3.0)\nMax skewness: skewness ≤ max_skewness (default 0.8)\nMin angle quality: angle_quality ≥ min_angle_quality (default 0.4), where 1 = perfect 60° minimum angle\nMin Jacobian (shape) quality: jacobian_quality ≥ min_jacobian_quality (default 0.4)\nFlow indicators\nVelocity-gradient magnitude: ||∇U||_F ≥ grad_threshold (default 0.2) ⇒ refine\nCurvature from dihedral angles between adjacent triangle normals: angle ≥ curvature_threshold (default 0.6 rad) ⇒ refine","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Any single criterion marks an element for refinement. Refinement uses 1→4 splitting with periodic midpoints. After refinement the node coordinates are wrapped.","category":"page"},{"location":"remeshing/#Curvature-/Anisotropy-based-passes","page":"Remeshing","title":"Curvature-/Anisotropy-based passes","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"curvature_based_remesh!: targets high-dihedral-angle regions to preserve sharp roll-up fronts.\nanisotropic_remesh!: probes a supplied velocity_field(x,y,z) and refines where gradients are strong.","category":"page"},{"location":"remeshing/#Conservation-of-circulation-across-remesh","page":"Remeshing","title":"Conservation of circulation across remesh","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"We compute node circulations from eleGma on the old mesh, then reconstruct eleGma on the new geometry:","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"nodeTau = node_circulation_from_ele_gamma(tri_old, eleGma_old)\neleGma_new = ele_gamma_from_node_circ(nodeTau, tri_new)","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"This preserves the discrete circulation across re-meshing operations.","category":"page"},{"location":"remeshing/#Figures-from-the-thesis","page":"Remeshing","title":"Figures from the thesis","text":"","category":"section"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Add quality metrics illustrations and sheet roll-up examples from the thesis PDF into docs/src/assets/ and reference them here.","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Figure 3.26 (remeshing/quality illustration; suggested filename: fig_3_26.png):","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"(Image: )","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Figure 3.26: Remeshing and mesh-quality metrics (aspect ratio, skewness, angle and Jacobian quality) used to trigger refinement.","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Figure 3.52 (curvature/flow-adaptive example; suggested filename: fig_3_52.png):","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"(Image: )","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Figure 3.52: Curvature- and flow-adaptive refinement highlighting high-dihedral-angle regions and strong velocity-gradient zones.","category":"page"},{"location":"remeshing/","page":"Remeshing","title":"Remeshing","text":"Add brief captions describing what each figure illustrates once extracted.","category":"page"},{"location":"theory/#Theory-Overview","page":"Theory","title":"Theory Overview","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"This package implements a 3D Lagrangian vortex method with periodic boundaries. The core ideas are:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Vorticity is carried on a moving, triangulated sheet (Lagrangian elements). Each triangle has a vector strength γ (element vorticity) that induces a velocity field.\nTo compute velocities, element vorticity is spread to a regular 3D grid using a smooth, compactly-supported kernel (Peskin-style discrete delta). The resulting grid vorticity field is converted to a velocity field by solving a Poisson equation for the vector potential via FFTs, after assembling the curl RHS.\nGrid velocities are interpolated back to the Lagrangian nodes. Time integration moves nodes forward and updates element strengths consistent with conserved circulation and optional baroclinic sources or subfilter dissipation.","category":"page"},{"location":"theory/#Mathematical-pipeline","page":"Theory","title":"Mathematical pipeline","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Spreading (Lagrangian → Eulerian):\nEach triangle is subdivided (4 sub-triangles) to reduce quadrature error.\nThe kernel distributes each element’s vorticity to nearby grid cells within delr cells in each direction.\nPeriodicity is enforced by tiling in ±1 in x and y (and periodic wrap in z).\nCurl RHS on the grid:\nGiven vorticity ω = (ωx,ωy,ωz) on the grid, the RHS of the vector Poisson equation is -curl(ω).\nWe use centered finite differences (4th-order in the interior, downwinded near boundaries with periodic wrap).\nPoisson solve (periodic):\nSpectral inversion in Fourier space with full 3D FFTW.fft (or a discrete Laplacian symbol when mode=:fd).\nZero-mean constraint by setting the k=0 mode to zero.\nInterpolation (Eulerian → Lagrangian):\nUse the same family of kernels to interpolate grid velocity to node positions (with periodic tiling in x,y).\nTime stepping:\nTwo-stage RK2 is provided (with optional dissipation models). Adaptive dt via a CFL-like condition using the maximum grid speed.\nBaroclinic source can update element vorticity (Atwood–gravity term) between stages.","category":"page"},{"location":"theory/#Kernels","page":"Theory","title":"Kernels","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"The kernel module (VortexMethod.Kernels) provides interchangeable, compactly supported weighting functions:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"PeskinStandard(delr=4.0): cosine-based 1D weights multiplied in x/y/z.\nPeskinCosine(delr): smoother cosine taper.\nM4Prime(delr=2.0): B-spline-like compact kernel (4th-order characteristics).\nAreaWeighting(delr): simple hat-function scaling with element area.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"The support radius delr defines the number of grid spacings over which the kernel has support.","category":"page"},{"location":"theory/#Remeshing-notions-(see-“Remeshing”-page-for-details)","page":"Theory","title":"Remeshing notions (see “Remeshing” page for details)","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Lagrangian mesh quality degrades over time as nodes move and the sheet rolls up. Two complementary paths are implemented:\nBaseline length/flip/collapse pass (simple and fast), and\nAdvanced quality- and flow-aware refinement.\nThe advanced method uses periodic, minimum-image metrics to evaluate shape quality and local curvature; it also uses the Frobenius norm of the velocity gradient from a cached grid velocity to detect under-resolved regions.","category":"page"},{"location":"theory/#Figures-from-the-thesis","page":"Theory","title":"Figures from the thesis","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"Place figures (e.g., kernel shapes, flow schematics, sheet roll-up) from the thesis PDF (mstock_dissertation.pdf) into docs/src/assets/.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Thesis figures to include here:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Figure 1.23 (theory overview; suggested filename: fig_1_23.png):","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"(Image: )","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Figure 1.23: High-level overview of the Lagrangian–Eulerian vortex method pipeline (spreading → curl RHS → Poisson → interpolation → time stepping). ","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Figure 3.19 (supporting theory/parallel pipeline; suggested filename: fig_3_19.png):","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"(Image: )","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Figure 3.19: Parallelization sketch showing MPI distribution for spreading/interpolation and centralized Poisson solve/broadcast.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Add short captions below each image once extracted.","category":"page"},{"location":"validation/#Validation","page":"Validation","title":"Validation","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"This page outlines simple validation steps and how to produce figures for the docs.","category":"page"},{"location":"validation/#Kelvin–Helmholtz-(KH)-run","page":"Validation","title":"Kelvin–Helmholtz (KH) run","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"Run the advanced example with MPI to produce a time-series JLD2 file with snapshots and (optionally) kinetic energy in the params:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"mpirun -n 4 julia --project examples/advanced_kh3d.jl","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"By default, it writes to checkpoints/advanced_series.jld2. You can change the output path in the example script if desired.","category":"page"},{"location":"validation/#Kinetic-energy-plot","page":"Validation","title":"Kinetic energy plot","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"Use the provided plotting script to generate a KE vs time graphic into the docs assets. Set SERIES_FILE and OUTPUT_PNG:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"SERIES_FILE=checkpoints/advanced_series.jld2 \\\nOUTPUT_PNG=docs/src/assets/ke_series.png \\\njulia --project examples/plot_series_ke.jl","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"Then reference it here:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"validation/#Extracting-figures-from-the-thesis-(optional)","page":"Validation","title":"Extracting figures from the thesis (optional)","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"If the thesis figures are available in mstock_dissertation.pdf, extract selected images using pdfimages (Poppler) or pdftoppm:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"macOS (Homebrew): brew install poppler\nUbuntu/Debian: sudo apt-get install poppler-utils","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"Extract embedded images:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"pdfimages -png mstock_dissertation.pdf docs/src/assets/fig","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"or rasterize specific pages to PNGs (e.g., pages 10–12):","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"pdftoppm -png -f 10 -l 12 mstock_dissertation.pdf docs/src/assets/page","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"After saving, include figures in the appropriate pages (Theory/Remeshing/Parallelization). For the following thesis figure numbers, save with these suggested filenames:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"1.23 → docs/src/assets/fig123.png (Theory)\n3.19 → docs/src/assets/fig319.png (Theory/Parallelization)\n3.26 → docs/src/assets/fig326.png (Remeshing)\n3.52 → docs/src/assets/fig352.png (Remeshing)","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"validation/#Direct-page-extraction-(user-provided-pages)","page":"Validation","title":"Direct page extraction (user-provided pages)","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"You shared the page numbers for these figures: 3.19, 1.23, 3.26, 3.52 → pages 90, 98, 118, 140.","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"Extract at 300 dpi and save with the suggested filenames:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"# Figure 3.19 on page 90\npdftoppm -png -r 300 -f 90 -l 90 mstock_dissertation.pdf docs/src/assets/fig_3_19\nmv docs/src/assets/fig_3_19-090.png docs/src/assets/fig_3_19.png || \\\n  mv docs/src/assets/fig_3_19-90.png docs/src/assets/fig_3_19.png\n\n# Figure 1.23 on page 98\npdftoppm -png -r 300 -f 98 -l 98 mstock_dissertation.pdf docs/src/assets/fig_1_23\nmv docs/src/assets/fig_1_23-098.png docs/src/assets/fig_1_23.png || \\\n  mv docs/src/assets/fig_1_23-98.png docs/src/assets/fig_1_23.png\n\n# Figure 3.26 on page 118\npdftoppm -png -r 300 -f 118 -l 118 mstock_dissertation.pdf docs/src/assets/fig_3_26\nmv docs/src/assets/fig_3_26-118.png docs/src/assets/fig_3_26.png\n\n# Figure 3.52 on page 140\npdftoppm -png -r 300 -f 140 -l 140 mstock_dissertation.pdf docs/src/assets/fig_3_52\nmv docs/src/assets/fig_3_52-140.png docs/src/assets/fig_3_52.png","category":"page"},{"location":"validation/#Notes","page":"Validation","title":"Notes","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"Ensure that any figure usage aligns with the thesis’ distribution rights.\nFor reproducibility, note the exact example parameters used to generate the series file.","category":"page"},{"location":"validation/#Results-(example-figures)","page":"Validation","title":"Results (example figures)","text":"","category":"section"},{"location":"validation/","page":"Validation","title":"Validation","text":"Gamma magnitude snapshot:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"Generate and embed a snapshot plot of |γ| at a chosen time (snapshot index):","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"SERIES_FILE=checkpoints/advanced_series.jld2 \\\nSNAP_INDEX=10 \\\nOUTPUT_PNG=docs/src/assets/snapshot_gamma.png \\\njulia --project examples/plot_snapshot_gamma.jl","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"Then include it here:","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"(Image: )","category":"page"},{"location":"validation/","page":"Validation","title":"Validation","text":"If you share the thesis figure numbers/pages to include (and captions), we’ll add them directly to the relevant sections with proper references.","category":"page"},{"location":"#VortexMethod","page":"Home","title":"VortexMethod","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for VortexMethod.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Notes-on-Remeshing-and-Metrics","page":"Home","title":"Notes on Remeshing and Metrics","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Periodic metrics: Advanced remeshing and sheet quality now use periodic, minimum-image geometry in x/y and symmetric in z ([-Lz,Lz]).\nThresholds (defaults):\nmaxaspectratio=3.0, max_skewness=0.8\nminanglequality=0.4, minjacobianquality=0.4\ngradthreshold=0.2 (Frobenius norm of ∇U), curvaturethreshold=0.6 rad\nKernel-based interpolation options are available via Kernels.\nNew helper: grid_velocity(eleGma, triXC, triYC, triZC, domain, gr) computes (Ux,Uy,Uz) for reuse.","category":"page"},{"location":"#Tuning-Thresholds","page":"Home","title":"Tuning Thresholds","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Coarser meshes typically require looser thresholds (e.g., AR≤4.0) to avoid over-refinement; finer meshes can tolerate tighter thresholds (e.g., AR≤3.0).\nSet grad_threshold proportional to expected shear; use a smaller value for gentle flows and larger for strongly sheared layers.\ncurvature_threshold is a dihedral angle; values around 0.5–0.8 rad (≈29–46°) work well for sheet roll-up detection.\nYou can pass these per-call via flow_adaptive_remesh! or rely on the defaults.","category":"page"},{"location":"#Velocity-Reuse","page":"Home","title":"Velocity Reuse","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Use make_velocity_sampler(eleGma, triXC, triYC, triZC, domain, gr) to build a closure (x,y,z)->(u,v,w) backed by a single spread/Poisson solve.\nThis reduces repeated Poisson solves during remeshing and sheet tracking in the same time step.","category":"page"}]
}
